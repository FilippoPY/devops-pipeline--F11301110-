name: CI Dev Deployment

on:
  push:
    branches:
      - main

# Permiso para crear/actualizar releases
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: "Run tests (if any)"
        run: |
          if [ -d tests ] || [ -f pytest.ini ]; then pip install pytest && pytest -q; else echo "No tests detected. Skipping."; fi

      - name: "Package artifact"
        run: zip -r build.zip .

      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: "Download artifact"
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .

      - name: "Debug env & files"
        run: |
          echo "BUILD_TAG=${{ vars.BUILD_TAG }}"
          echo "RELEASE_NOTE=${{ vars.RELEASE_NOTE }}"
          ls -lh build.zip

      # Crea el release usando la API (sin gh CLI)
      - name: "Create GitHub Release"
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ vars.BUILD_TAG }}
          body: ${{ vars.RELEASE_NOTE }}
          files: build.zip
