name: CI/CD Deployment Pipeline
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  # 1) BUILD (igual que antes)
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: "Run tests (if any)"
        run: |
          if [ -d tests ] || [ -f pytest.ini ]; then pip install pytest && pytest -q; else echo "No tests detected. Skipping."; fi
      - name: "Package artifact"
        run: zip -r build.zip .
      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  # 2) DEPLOY STAGING
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: "Download artifact"
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .
      - name: "Create GitHub Release (staging)"
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ vars.BUILD_TAG }}      # staging-vX.Y
          body: ${{ vars.RELEASE_NOTE }}       # Testing pre-production release
          prerelease: true
          files: build.zip

  # 3) DEPLOY PRODUCTION (requiere aprobaci√≥n)
  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: "Download artifact"
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .
      - name: "Create GitHub Release (prod)"
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ vars.BUILD_TAG }}      # prod-vX.Y
          body: ${{ vars.RELEASE_NOTE }}
          files: build.zip
