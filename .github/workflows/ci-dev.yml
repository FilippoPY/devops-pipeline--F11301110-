name: CI/CD Deployment Pipeline
on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  # === 1) BUILD (ya probado) ===
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: "Run tests (if any)"
        run: |
          if [ -d tests ] || [ -f pytest.ini ]; then pip install pytest && pytest -q; else echo "No tests detected. Skipping."; fi

      - name: "Package artifact"
        run: zip -r build.zip .

      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  # === 2) DEPLOY STAGING ===
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: "Download artifact"
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .

      - name: "Debug env & files (staging)"
        run: |
          echo "STAGING TAG=${{ vars.BUILD_TAG }}"
          echo "STAGING NOTE=${{ vars.RELEASE_NOTE }}"
          ls -lh build.zip

      - name: "Create GitHub Release (staging)"
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ vars.BUILD_TAG }}       # staging-v1.0
          body: ${{ vars.RELEASE_NOTE }}        # “Testing pre-production release”
          files: build.zip

  # === 3) DEPLOY PRODUCTION (con aprobación) ===
  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production        # ← activa Protection Rules (reviewers/timer)
    steps:
      - name: "Download artifact"
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .

      - name: "Debug env & files (prod)"
        run: |
          echo "PROD TAG=${{ vars.BUILD_TAG }}"
          echo "PROD NOTE=${{ vars.RELEASE_NOTE }}"
          ls -lh build.zip

      - name: "Create GitHub Release (prod)"
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ vars.BUILD_TAG }}       # prod-v1.0
          body: ${{ vars.RELEASE_NOTE }}        # “Initial production rollout”
          files: build.zip

